import json
from pathlib import Path
from skills.cyber_common import require_auth_and_scope, write_result, Deny


def tool(payload: str) -> str:
    """Validate authorization and scope before running pentest activity.

    Input JSON: {"target":"example.com","scope_file":"scope.txt","auth_doc":"auth.pdf","out_dir":"..."}
    """
    args = json.loads(payload or "{}")
    target = args.get("target", "")
    scope_file = args.get("scope_file", "scope.txt")
    auth_doc = args.get("auth_doc")
    out_dir = args.get("out_dir")
    try:
        require_auth_and_scope(scope_file, target)
        if not auth_doc or not Path(auth_doc).exists():
            raise Deny("Authorization document required")
        data = {"target": target, "scope_file": scope_file, "auth_doc": auth_doc}
        path = write_result("pentest_gate", data, run_dir=out_dir)
        return json.dumps({"ok": True, "result": path})
    except Deny as e:
        return json.dumps({"ok": False, "deny": str(e)})
