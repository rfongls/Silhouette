name: dev_python_fastapi_runtime
cases:
  - id: fastapi_sqlmodel_pytest
    requires_model: true
    requires_runtime: true
    prompt: |
      Create a minimal FastAPI app using SQLModel (SQLite) with one model Todo(id:int, title:str).
      Provide **two files** using the file fence convention:
      1) file: app/main.py  -> FastAPI app with GET /health returning {"status":"ok"}, and POST /todos to add a todo, GET /todos to list.
         Use SQLModel Session with SQLite in-memory for simplicity. Include app and engine creation in this file.
      2) file: tests/test_app.py -> pytest tests using httpx.AsyncClient to verify /health and that /todos POST+GET works.
      Include only fenced code blocks with exact file paths as shown.
    expect_files:
      - app/main.py
      - tests/test_app.py
    commands:
      - python -m pip install -q fastapi==0.* "uvicorn[standard]"==0.* httpx==0.* pytest==8.* anyio==4.* sqlmodel==0.*
      - pytest -q
    expect_stdout_regex:
      - "2 passed"
