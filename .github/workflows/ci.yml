name: CI

on:
  push:
    branches: [main, 'train/*']
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:24.0.5-dind
        options: --privileged

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dev deps
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -r requirements-dev.txt
        pip install accelerate huggingface_hub

    - name: Lint
      run: |
        ruff check .

    - name: Run unit tests with coverage
      run: |
        coverage run -m pytest --maxfail=1 --disable-warnings -q
        coverage xml
        coverage report --fail-under=30

    - name: Smoke-test CLI
      run: |
        python -m cli.main --no-repl
        printf ":replay\n:exit\n" | python -m cli.main | grep -q "Replayed"
        printf ":selfcheck\n:exit\n" | python -m cli.main | grep -q "Missing required files"
        printf ":backup\n:exit\n" | python -m cli.main | grep -q "Backup complete"

    - name: Self-deploy smoke
      run: |
        python -m silhouette_core.profile_exporter --output profile.json
        python -m silhouette_core.distiller --output distillate.json
        python -m silhouette_core.package_clone --profile profile.json --distillate distillate.json --version 1
        printf ":agent deploy tmp_deploy\n:exit\n" | python -m cli.main | grep -q "Deployed clone"

    - name: Skills Selfcheck
      run: python scripts/selfcheck.py --policy profiles/core/policy.yaml

    - name: Eval (agent-level)
      run: python -m eval.eval --suite eval/suites/basics.yaml

    - name: Eval (profile-core)
      run: python -m eval.eval --suite eval/suites/profile_core.yaml

    - name: Eval (dev-python)
      run: python -m eval.eval --suite eval/suites/dev_python.yaml

    - name: Eval (dev-python-advanced)
      run: python -m eval.eval --suite eval/suites/dev_python_advanced.yaml

    - name: Eval (dev-html)
      run: python -m eval.eval --suite eval/suites/dev_html.yaml

    - name: Eval (dev-html-advanced)
      run: python -m eval.eval --suite eval/suites/dev_html_advanced.yaml

    - name: Eval (dev-java)
      run: python -m eval.eval --suite eval/suites/dev_java.yaml

    - name: Eval (dev-java-advanced)
      run: python -m eval.eval --suite eval/suites/dev_java_advanced.yaml

    - name: Eval (dev-csharp)
      run: python -m eval.eval --suite eval/suites/dev_csharp.yaml

    - name: Eval (dev-csharp-advanced)
      run: python -m eval.eval --suite eval/suites/dev_csharp_advanced.yaml

    - name: Eval (dev-android)
      run: python -m eval.eval --suite eval/suites/dev_android.yaml

    - name: Eval (dev-android-advanced)
      run: python -m eval.eval --suite eval/suites/dev_android_advanced.yaml

    - name: Runtime Eval (FastAPI+SQLModel+pytest)  # skips unless enabled
      run: python -m eval.build_runner --suite eval/suites/dev_python_fastapi_runtime.yaml --require_runtime_env

    - name: Runtime Eval (Python ML: sklearn & torch)  # skips unless enabled
      run: python -m eval.build_runner --suite eval/suites/dev_python_ml_runtime.yaml --require_runtime_env

    - name: Runtime Eval (Skill)  # skips unless enabled
      run: python -m eval.build_runner --suite eval/suites/dev_skill_runtime.yaml --require_runtime_env

    - name: Runtime Eval (Java, .NET, Android)  # skips unless enabled
      run: |
        ENABLE_RUNTIME_EVAL=1 python -m eval.build_runner --suite eval/suites/dev_java_runtime.yaml --require_runtime_env
        ENABLE_RUNTIME_EVAL=1 python -m eval.build_runner --suite eval/suites/dev_dotnet_runtime.yaml --require_runtime_env
        ENABLE_RUNTIME_EVAL=1 python -m eval.build_runner --suite eval/suites/dev_android_runtime.yaml --require_runtime_env

    - name: Synthesize KD Traces (from runtime)
      run: |
        python scripts/synthesize_traces.py
        python scripts/validate_traces.py artifacts/traces/runtime_kd.jsonl

    - name: Archive runtime zips
      uses: actions/upload-artifact@v4
      with:
        name: runtime-workdirs
        path: artifacts/runs/**

    - name: Security Scan (enhanced)
      run: |
        python -m security.scanner --path . \
          --out artifacts/security_report.json \
          --license_whitelist MIT,Apache-2.0,BSD-2-Clause,BSD-3-Clause \
          --license_denylist GPL-3.0,AGPL-3.0,MPL-2.0 \
          --max_high 0 --max_medium 10 --max_low 999

    - name: Watermark artifacts
      run: |
        python scripts/watermark_artifact.py --artifact_dir models/student-core-kd --customer_id "INTERNAL" --notes "KD checkpoint"
        python scripts/verify_watermark.py --artifact_dir models/student-core-kd

    - name: Compliance Gate Demo (optional; expected fail)
      if: env.DEMO_COMPLIANCE_FAIL == '1'
      run: |
        python -m security.scanner --path tests/fixtures \
          --out artifacts/security_report_demo.json \
          --license_whitelist MIT,Apache-2.0,BSD-2-Clause,BSD-3-Clause \
          --license_denylist GPL-3.0,AGPL-3.0,MPL-2.0 \
          --max_high 0 --max_medium 0 --max_low 999

    - name: Scoreboard
      run: PHASE=6 python scripts/scoreboard.py

    - name: Upload Scoreboard Artifact
      uses: actions/upload-artifact@v4
      with:
        name: silhouette-scoreboard
        path: artifacts/scoreboard/**


  codex-training:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Run Codex controller
        run: python -m silhouette_core.codex_controller

