import os
import subprocess
import sys
from pathlib import Path


def run(args, env=None, check=False):
    return subprocess.run(
        [sys.executable, "-m", "silhouette_core.cli"] + args,
        capture_output=True,
        text=True,
        check=check,
        env=env,
    )


def test_recon_denied_without_scope_ack(tmp_path):
    env = os.environ.copy()
    env["PYTHONUNBUFFERED"] = "1"
    r = run(
        [
            "security",
            "--ack-authorized",
            "pentest",
            "recon",
            "--target",
            "not-in-scope.example",
            "--scope-file",
            "docs/cyber/scope_example.txt",
        ],
        env=env,
    )
    combined = r.stdout + r.stderr
    assert r.returncode != 0
    assert "Denied" in combined or "not in scope" in combined


def test_recon_ok_with_scope_and_ack(tmp_path):
    env = os.environ.copy()
    env["PYTHONUNBUFFERED"] = "1"
    r = run(
        [
            "security",
            "--ack-authorized",
            "pentest",
            "recon",
            "--target",
            "sub.example.com",
            "--scope-file",
            "docs/cyber/scope_example.txt",
        ],
        env=env,
        check=False,
    )
    assert r.returncode == 0
    latest = max(Path("out/security").glob("2*"))
    recon_json = latest / "active" / "recon.json"
    assert recon_json.exists()

